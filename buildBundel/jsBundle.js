/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./ts/addEmployee.ts":
/*!***************************!*\
  !*** ./ts/addEmployee.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst constants_1 = __webpack_require__(/*! ./constants/constants */ \"./ts/constants/constants.ts\");\nconst Employees_1 = __webpack_require__(/*! ./models/Employees */ \"./ts/models/Employees.ts\");\nconst roles_1 = __webpack_require__(/*! ./roles */ \"./ts/roles.ts\");\nconst employeeServices_1 = __webpack_require__(/*! ./services/employeeServices */ \"./ts/services/employeeServices.ts\");\nconst formValidation_1 = __webpack_require__(/*! ./services/formValidation */ \"./ts/services/formValidation.ts\");\nlet empId, mode;\nvar employeeFormDetails = constants_1.Constants.DefaultEmployeeDetails;\nclass AddEmployee extends roles_1.default {\n    //getting mode and employee id if it exists\n    getEmployeeParams() {\n        const urlParams = new URLSearchParams(window.location.search);\n        mode = urlParams.get('mode');\n        empId = urlParams.get('id');\n        ((mode == \"view\" || mode == \"edit\") && !empId) ? window.location.href = \"index.html\" : \"\";\n        mode == \"view\" && empId ? this.viewPage(empId) : mode == \"edit\" && empId ? this.editPage(empId) : \"\";\n    }\n    // redirecting view page to edit page\n    editEmployee(event, id) {\n        event.preventDefault();\n        window.location.href = 'employee.html?id=' + id + '&&mode=edit';\n    }\n    //deleting the employee\n    deleteEmployeeUsingId(event, id) {\n        event.preventDefault();\n        employeeServices_1.employeeServices.delete(id);\n        window.location.href = 'index.html';\n    }\n    //reading the image file\n    getImage(imagedata) {\n        let reader = new FileReader();\n        reader.readAsDataURL(imagedata.files[0]);\n        reader.onload = () => {\n            document.querySelector(\".left-wrapper .img-wrapper img\").src = reader.result;\n            employeeFormDetails.image = reader.result;\n        };\n        reader.onerror = () => alert(\"Please upload the image again!\");\n    }\n    ;\n    // view the employee in add employee page\n    viewPage(id) {\n        let viewEmployee = employeeServices_1.employeeServices.getById(id);\n        !viewEmployee ? window.location.href = \"index.html\" : '';\n        document.querySelector(\"#editOrDelete\").innerHTML += `<button class=\"edit\" onclick=\"window.app.editEmployee(event,${id})\">Edit</button>  <button class=\"delete\" onclick = \"window.app.deleteEmployeeUsingId(event,${id})\" > Delete</button>`;\n        this.displayDataIntoInput(viewEmployee, 'View');\n        Array.from(document.querySelector('#employeeForm').elements).forEach((ele) => ele.disabled = true);\n        document.querySelector(\".employment-information .btn-wrapper\").style.display = \"none\";\n    }\n    // on form input changes invoking the function\n    onFormInputChange(value, name) {\n        employeeFormDetails[name] = value.trim();\n    }\n    //displayDataIntoInput\n    displayDataIntoInput(employee, mode) {\n        document.querySelector(\".left-wrapper .img-wrapper img\").src = employee.image;\n        document.querySelector(`label[for=\"file\"]`).style.display = mode == 'Edit' ? '' : \"none\";\n        document.querySelector(`label[for=\"file\"] img`).src = mode == 'Edit' ? \"../assests/images/file-pen.svg\" : \"none\";\n        document.querySelector(\".employee-details > .title\").innerText = mode + \" Employee\";\n        for (let key in employee)\n            key != \"status\" && key != \"image\" ? document.getElementsByName(`${key == 'role' ? 'jobTitle' : key}`)[0].value = employee[key] : \"\";\n    }\n    // edit/ update the employee data\n    editPage(id) {\n        let editEmployee = employeeServices_1.employeeServices.getById(id);\n        !editEmployee ? window.location.href = \"index.html\" : \"\";\n        employeeFormDetails = editEmployee;\n        document.querySelector(\".employment-information .btn-wrapper .add-employee button\").innerHTML = 'Update';\n        this.displayDataIntoInput(editEmployee, \"Edit\");\n        (document.querySelector(`input[name=\"empno\"]`)).disabled = true;\n    }\n    //on submitting data form reset\n    resetForm() {\n        mode == \"edit\" ? window.location.reload() : \"\";\n        document.querySelector(\"#employeeForm\").reset();\n        document.querySelector(\".left-wrapper .img-wrapper img\").src = employeeFormDetails.image;\n        for (let field of constants_1.Constants.EmployeeRequiredFields) {\n            let spanElement = document.querySelector(`span[name=\"${field}\"]`);\n            spanElement ? spanElement.removeAttribute('error') : \"\";\n        }\n    }\n    // enabling the toast message on submitting the form\n    toastToggle(message) {\n        document.querySelector(\".toast\").classList.toggle(\"toast-toggle\");\n        document.querySelector(\".toast .message\").innerText = message;\n    }\n    // form submit\n    handleSubmit(e) {\n        e.preventDefault();\n        let isValid = false;\n        for (let field of constants_1.Constants.EmployeeRequiredFields) {\n            let ele = document.querySelector('span#' + field);\n            !employeeFormDetails[field] ? ele.setAttribute('error', '') : ele.removeAttribute('error');\n            if (!employeeFormDetails[field])\n                isValid = true;\n        }\n        if (isValid)\n            return;\n        isValid = formValidation_1.utility.validateForm(employeeFormDetails);\n        if (!isValid)\n            return;\n        employeeFormDetails.empno = `${parseInt(employeeFormDetails.empno)}`;\n        let employee = new Employees_1.Employee(employeeFormDetails);\n        employeeServices_1.employeeServices.save(employee);\n        employeeFormDetails = constants_1.Constants.DefaultEmployeeDetails;\n        this.toastToggle(mode != \"edit\" ? \"Employee Added Successfully\" : \"Updated Successfully\");\n        setTimeout(() => {\n            this.toastToggle(\"\");\n            this.resetForm();\n            mode == \"edit\" ? (window.location.href = 'employee.html?id=' + empId + '&&mode=view') : \"\";\n        }, 1500);\n    }\n}\nexports[\"default\"] = AddEmployee;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ts/addEmployee.ts\n");

/***/ }),

/***/ "./ts/addRole.ts":
/*!***********************!*\
  !*** ./ts/addRole.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst constants_1 = __webpack_require__(/*! ./constants/constants */ \"./ts/constants/constants.ts\");\nconst role_1 = __webpack_require__(/*! ./role */ \"./ts/role.ts\");\nconst employeeServices_1 = __webpack_require__(/*! ./services/employeeServices */ \"./ts/services/employeeServices.ts\");\nconst roleServices_1 = __webpack_require__(/*! ./services/roleServices */ \"./ts/services/roleServices.ts\");\nlet employees;\nvar currentRoleDetails;\nlet searchId;\n// resetting the form\nclass AddRoles extends role_1.default {\n    roleResetForm() {\n        var _a;\n        document.querySelector(\"#roleForm\").reset();\n        for (let field of constants_1.Constants.RoleRequiredFields) {\n            (_a = document.querySelector(`#${field}`)) === null || _a === void 0 ? void 0 : _a.removeAttribute('error');\n        }\n        employees.forEach((employee) => employee.isCheckedRole = false);\n        this.displayEmployeeRoleBubble();\n    }\n    //required fields for the role page\n    editRole(id) {\n        let roleData = roleServices_1.roleServices.getById(id);\n        document.querySelector('#addrole') ? document.querySelector('#addrole').innerHTML = \"Update\" : '';\n        document.querySelector('form .title') ? document.querySelector('form .title').innerHTML = \"Edit Role\" : '';\n        document.querySelector('input[name=\"name\"]') ? document.querySelector('input[name=\"name\"]').value = roleData.name : '';\n        document.querySelector('select[name=\"department\"]') ? document.querySelector('select[name=\"department\"]').value = roleData.department : '';\n        document.querySelector('select[name=\"location\"]') ? document.querySelector('select[name=\"location\"]').value = roleData.location : '';\n        document.querySelector('textarea[name=\"description\"]') ? document.querySelector('textarea[name=\"description\"]').value = roleData.description : '';\n        let employeesAssigned = roleData.employeesAssigned;\n        employees = employeeServices_1.employeeServices.getAll();\n        employees.forEach(employee => {\n            employeesAssigned.forEach(emp => {\n                employee.empno == emp.empno ? employee.isCheckedRole = true : \"\";\n            });\n        });\n        currentRoleDetails = Object.assign({}, roleData);\n        this.displayEmployeeRoleBubble();\n    }\n    //displaying the assigned employees to the role\n    displayEmployeeRoleBubble() {\n        var inputEmployeeSearch = document.querySelector('.assign-employees input[name=\"employeeSearch\"]');\n        let employeeBubble = document.querySelector(\".employee-bubble\");\n        let innerData = \"\";\n        let flag = true;\n        employees.forEach((employee) => {\n            if (employee.isCheckedRole) {\n                flag = false;\n                let bubbleCard = constants_1.Constants.EmployeeBubble;\n                bubbleCard = bubbleCard.replace('{{empId}}', employee.empno).replace('{{firstname}}', employee.firstname).replace('{{image}}', employee.image);\n                innerData += bubbleCard;\n            }\n        });\n        employeeBubble ? employeeBubble.innerHTML = innerData : '';\n        employeeBubble ? employeeBubble.style.display = flag ? \"none\" : \"flex\" : '';\n        inputEmployeeSearch ? inputEmployeeSearch.style.maxWidth = flag ? \"100%\" : \"calc(100% - 147px)\" : '';\n        employeeBubble ? employeeBubble.style.width = flag ? \"0\" : \"147px\" : '';\n    }\n    hideEmployeeSearch(e) {\n        if (!e.target.value) {\n            document.querySelector(\".search-employee-data\").style.display = \"none\";\n        }\n    }\n    //on key change getting the employee containing the name\n    searchEmployees(e) {\n        document.querySelector(\".search-employee-data\").style.display = \"flex\";\n        let filterArray = [];\n        if (e.target.value) {\n            employees.forEach((employee) => {\n                let name = employee.firstname + employee.lastname;\n                name.toLowerCase().includes(e.target.value.toLowerCase()) ? filterArray.push(employee) : \"\";\n            });\n        }\n        this.displayEmployeeCard(filterArray);\n    }\n    //displaying the searchable data at the assign employees section\n    displayEmployeeCard(filterData) {\n        let empData = \"\";\n        filterData.forEach((employee) => {\n            let employeeCard = constants_1.Constants.EmployeeCardDropdown.replaceAll('{{empId}}', employee.empno).replace('{{image}}', employee.image).replace('{{firstname}}', employee.firstname).replace('{{lastname}}', employee.lastname).replace('{{checked}}', employee.isCheckedRole ? \"checked\" : \"\");\n            empData += employeeCard;\n        });\n        document.querySelector(\".search-employee-data\").innerHTML = empData;\n    }\n    // displaying the toast message\n    toastToggleRole(message) {\n        document.querySelector(\".toast\").classList.toggle(\"toast-toggle\");\n        document.querySelector(\".toast .message\").innerText = message;\n    }\n    getRoleData(value, key) {\n        currentRoleDetails[key] = value;\n    }\n    // adding employees to the role\n    assignEmployeesToRole(empno) {\n        employees.forEach((employee) => employee.empno == empno ? employee.isCheckedRole = document.querySelector(`.employee-card #emp${empno}`).checked : \"\");\n        this.displayEmployeeRoleBubble();\n    }\n    // used to remove the employee from the assigned role\n    removeFromEmployeeBubble(empno) {\n        let employee = document.querySelector(`.employee-card #emp${empno}`);\n        employee ? (employee.checked = false) : \"\";\n        employees.forEach((element) => element.empno == empno ? (element.isCheckedRole = false) : \"\");\n        this.displayEmployeeRoleBubble();\n    }\n    getRoleParams() {\n        currentRoleDetails = constants_1.Constants.DefaultRoleDetails;\n        const urlParams = new URLSearchParams(window.location.search);\n        searchId = urlParams.get('id');\n        searchId ? this.editRole(searchId) : employees = employeeServices_1.employeeServices.getAll();\n    }\n    validateForm(currentRoleDetails) {\n        var _a;\n        let isValid = true;\n        for (let field of constants_1.Constants.RoleRequiredFields) {\n            if (!currentRoleDetails[field]) {\n                (_a = document.querySelector(`span#${field}`)) === null || _a === void 0 ? void 0 : _a.setAttribute('error', '');\n                isValid = false;\n            }\n        }\n        return isValid;\n    }\n    generateRole(currentRoleDetails) {\n        roleServices_1.roleServices.save(currentRoleDetails);\n    }\n    addToRole(e) {\n        e.preventDefault();\n        if (this.validateForm(currentRoleDetails)) {\n            currentRoleDetails.employeesAssigned = employees.filter(employee => employee.isCheckedRole);\n            this.generateRole(currentRoleDetails);\n            this.toastToggleRole(searchId ? \"Role Updated Successfully\" : \"Role Added Successfully\");\n            currentRoleDetails = constants_1.Constants.DefaultRoleDetails;\n            setTimeout(() => {\n                this.toastToggleRole(\"\");\n                this.roleResetForm();\n                searchId ? window.location.href = \"roles.html\" : \"\";\n            }, 1500);\n        }\n    }\n}\nexports[\"default\"] = AddRoles;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ts/addRole.ts\n");

/***/ }),

/***/ "./ts/constants/constants.ts":
/*!***********************************!*\
  !*** ./ts/constants/constants.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Constants = void 0;\nexports.Constants = {\n    Employeetableheader: `<tr>\r\n    <td>\r\n      <div class=\"table-check-box\"><input type=\"checkbox\" onchange=\"window.app.employeeCheckBox(this)\"/></div>\r\n    </td>\r\n    <td>\r\n      <div class=\"head-user header\">\r\n        <span>user</span>\r\n        <div class=\"icons\">\r\n          <img id=\"up\" src=\"../assests/images/chevron-up.svg\" onclick=\"window.app.sortData('name','asec','.head-user #up')\" class=\"fa table-icon\">\r\n          <img id=\"down\" src=\"../assests/images/chevron-down.svg\" onclick=\"window.app.sortData('name','desc','.head-user #down')\" class=\"fa table-icon\" alt=\"down-arrow\"/>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div class=\"head-location header\">\r\n        <span>location</span>\r\n        <div class=\"icons\">\r\n          <img id=\"up\" src=\"../assests/images/chevron-up.svg\" onclick=\"window.app.sortData('location','asec','.head-location #up')\"  class=\"fa table-icon\" alt=\"arrow-up\">\r\n          <img id=\"down\" src=\"../assests/images/chevron-down.svg\" onclick=\"window.app.sortData('location','desc','.head-location #down')\"  class=\"fa table-icon\" alt=\"down-arrow\"/>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div class=\"head-department header\">\r\n        <span>department</span>\r\n        <div class=\"icons\">\r\n          <img id=\"up\" src=\"../assests/images/chevron-up.svg\" onclick=\"window.app.sortData('department','asec','.head-department #up')\" class=\"fa table-icon\" alt=\"arrow-up\">\r\n          <img id=\"down\" src=\"../assests/images/chevron-down.svg\" onclick=\"window.app.sortData('department','desc','.head-department #down')\"  class=\"fa table-icon\" alt=\"down-arrow\"/>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div class=\"head-role header\">\r\n        <span>role</span>\r\n        <div class=\"icons\">\r\n          <img id=\"up\" src=\"../assests/images/chevron-up.svg\" onclick=\"window.app.sortData('jobTitle','asec','.head-role #up')\"  class=\"fa table-icon\" alt=\"arrow-up\">\r\n          <img id=\"down\" src=\"../assests/images/chevron-down.svg\" onclick=\"window.app.sortData('jobTitle','desc','.head-role #down')\"class=\"fa table-icon\" alt=\"down-arrow\"/>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div class=\"head-emp-no header\">\r\n        <span>emp&nbsp;no</span>\r\n        <div class=\"icons\">\r\n          <img id=\"up\" src=\"../assests/images/chevron-up.svg\" onclick=\"window.app.sortData('empno','asec','.head-emp-no #up')\"  class=\"fa table-icon\" alt=\"arrow-up\">\r\n          <img id=\"down\" src=\"../assests/images/chevron-down.svg\" onclick=\"window.app.sortData('empno','desc','.head-emp-no #down')\"  class=\"fa table-icon\" alt=\"down-arrow\"/>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div class=\"head-status header\">\r\n        <span>status</span>\r\n        <div class=\"icons\">\r\n          <img id=\"up\" src=\"../assests/images/chevron-up.svg\" onclick=\"window.app.sortData('status','asec','.head-status #up')\"  class=\"fa table-icon\" alt=\"arrow-up\">\r\n          <img id=\"down\" src=\"../assests/images/chevron-down.svg\" onclick=\"window.app.sortData('status','desc','.head-status #down')\"  class=\"fa table-icon\" alt=\"down-arrow\"/>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div class=\"head-join-date header\">\r\n        <span>join&nbsp;dt</span>\r\n        <div class=\"icons\">\r\n          <img id=\"up\" src=\"../assests/images/chevron-up.svg\" onclick=\"window.app.sortData('joiningDate','asec','.head-join-date #up')\"  class=\"fa table-icon\" alt=\"arrow-up\">\r\n          <img id=\"down\" src=\"../assests/images/chevron-down.svg\" onclick=\"window.app.sortData('joiningDate','desc','.head-join-date #down')\"  class=\"fa table-icon\" alt=\"down-arrow\"/>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div class=\"user-modification\">\r\n        <i> <img src=\"../assests/images/ellipsis.svg\" class=\"fa-solid fa-ellipsis\" /></i>\r\n      </div>\r\n    </td>\r\n  </tr>`,\n    EmployeeRow: `<tr>\r\n  <td>\r\n    <div class=\"table-check-box\">\r\n      <input type=\"checkbox\" class=\"table-checkbox\" id=\"{{employeeNumber}}\" onchange=\"window.app.employeeCheckBox()\" />\r\n    </div>\r\n  </td>\r\n  <td>\r\n    <div class=\"user-profile-card\">\r\n      <div class=\"profile-img\">\r\n        <img src=\"{{image}}\" alt=\"user-profile\" height=\"30px\"/>\r\n      </div>\r\n      <div class=\"profile-description\">\r\n        <div class=\"name\">{{firstname}} {{lastname}}</div>\r\n        <div class=\"email\">{{email}}</div>\r\n      </div>\r\n    </div>\r\n  </td>\r\n  <td>{{location}}</td>\r\n  <td>{{department}}</td>\r\n  <td>{{role}}</td>\r\n  <td>{{employeeNumber}}</td>\r\n  <td>\r\n    <button class=\"active\" style=\"text-transform:capitalize\" title=\"status\">{{status}}</button>\r\n  </td>\r\n  <td>{{joiningDate}}</td>\r\n    <td class=\"view-edit\">\r\n      <button onclick=\"window.app.popUpDisplay(this)\" onblur=\"window.app.hidePopUp(this)\">\r\n          <i style=\"padding:0px 8px\"><img src=\"../assests/images/ellipsis.svg\" class=\"fa-solid fa-ellipsis\" /></i>\r\n          <div>\r\n            <span onclick=\"window.app.viewOrEditEmployee({{employeeNumber}},'view')\">View&nbsp;Details </span>\r\n            <span onclick=\"window.app.viewOrEditEmployee({{employeeNumber}},'edit')\">Edit </span>\r\n            <span onclick=\"window.app.deleteEmployee({{employeeNumber}})\">Delete</span>\r\n          </div>\r\n      </button>\r\n    </td>\r\n</tr>`,\n    RoleCard: `<div class=\"roles-description\">\r\n<div class=\"roles-heading\">\r\n  <h3>{{roleName}}</h3>\r\n  <img src=\"../assests/images/edit.svg\" alt=\"edit\" onclick=\"window.app.redirectingToEditRole({{roleId}})\" />\r\n</div>\r\n<div class=\"role-information\">\r\n  <div class=\"role-item\">\r\n    <div class=\"left-item\">\r\n      <img src=\"../assests/images/employees-black.svg\" alt=\"employee\" />Department\r\n    </div>\r\n    <div class=\"right-item\">{{roleDepartment}}</div>\r\n  </div>\r\n  <div class=\"role-item\">\r\n    <div class=\"left-item\">\r\n      <img src=\"../assests/images/location.svg\" alt=\"location\" />Location\r\n    </div>\r\n    <div class=\"right-item\">{{roleLocation}}</div>\r\n  </div>\r\n  <div class=\"role-item\">\r\n    <div class=\"left-item\">Total Employees</div>\r\n    <div class=\"right-item\">\r\n      <div class=\"image-container\">\r\n            {{roleCardImageContainer}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"view-more-employees\">\r\n    <div class=\"view\">\r\n        <button onclick=\"window.app.redirectToEmployees({{roleId}})\">View all Employees</button>\r\n        <img src=\"../assests/images/right-arrow.svg\" alt=\"right-arrow\" />\r\n    </div>\r\n</div>\r\n</div >`,\n    EmployeeCardDropdown: `<label for=\"emp{{empId}}\" class=\"employee-card\">\r\n<div  class=\"profile\">\r\n  <div class=\"profile-image\">\r\n    <img src=\"{{image}}\" width=\"23px\" alt=\"profile\" />\r\n  </div>\r\n  <div class=\"name\">{{firstname}} {{lastname}}</div>\r\n</div>\r\n<input type=\"checkbox\" onchange=\"window.app.assignEmployeesToRole({{empId}})\" id=\"emp{{empId}}\" {{checked}} />\r\n</label>`,\n    EmployeeBubble: `<div class=\"employee-card\">\r\n<div>\r\n  <img src=\"{{image}}\" alt=\"profile\" />\r\n  <div class=\"name\">{{firstname}}</div>\r\n</div>\r\n<button onclick=\"window.app.removeFromEmployeeBubble({{empId}})\">x</button>\r\n</div>`,\n    RoleDetailsEmployeeCard: `<div class=\"role-profile-card\">\r\n<div class=\"role-profile\">\r\n  <div class=\"role-image\">\r\n    <img src=\"{{image}}\" alt=\"profile\" height=\"30px\" />\r\n  </div>\r\n  <div class=\"role-profile-description\">\r\n    <div class=\"name\">{{firstname}} {{lastname}}</div>\r\n    <div class=\"sub-line\">Head of Product Design</div>\r\n  </div>\r\n</div>\r\n<div class=\"profile-information\">\r\n  <div>\r\n    <img src=\"../assests/images/address-card.svg\" alt=\"address-card\" />\r\n    <span>{{empno}}</span>\r\n  </div>\r\n  <div>\r\n    <img src=\"../assests/images/email.svg\" alt=\"email\" />\r\n    <span>{{email}}</span>\r\n  </div>\r\n  <div>\r\n    <img src=\"../assests/images/employees-black.svg\" alt=\"technology\" />\r\n    <span>{{department}}</span>\r\n  </div>\r\n  <div>\r\n    <img src=\"../assests/images/location.svg\" alt=\"location\" />\r\n    <span>{{location}}</span>\r\n  </div>\r\n</div>\r\n<div class=\"view-more\">\r\n  <div class=\"view\">\r\n    <span>View</span><img src=\"../assests/images/right-arrow.svg\" alt=\"right-arrow\" />\r\n  </div>\r\n</div>\r\n</div>`,\n    DefaultEmployeeDetails: {\n        image: \"../assests/images/user-profile.jpg\",\n        firstname: \"\",\n        lastname: \"\",\n        status: 1,\n        email: \"\",\n        empno: \"\",\n        location: \"\",\n        mobile: \"\",\n        dob: \"\",\n        department: \"\",\n        jobTitle: \"\",\n        joiningDate: \"\",\n        assignManager: \"\",\n        assignProject: \"\"\n    },\n    DefaultRoleDetails: {\n        name: '',\n        department: '',\n        description: '',\n        location: '',\n        id: '',\n        employeesAssigned: []\n    },\n    EmployeeSelectedFilters: {\n        alphabet: '',\n        status: 0,\n        location: '',\n        department: ''\n    },\n    EmployeeRequiredFields: [\"empno\", \"email\", \"firstname\", \"lastname\", \"joiningDate\"],\n    RoleRequiredFields: [\"name\", \"department\", \"description\", \"location\"]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ts/constants/constants.ts\n");

/***/ }),

/***/ "./ts/enums/enums.ts":
/*!***************************!*\
  !*** ./ts/enums/enums.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EmployeeStatus = void 0;\nvar EmployeeStatus;\n(function (EmployeeStatus) {\n    EmployeeStatus[EmployeeStatus[\"Status\"] = 0] = \"Status\";\n    EmployeeStatus[EmployeeStatus[\"Active\"] = 1] = \"Active\";\n    EmployeeStatus[EmployeeStatus[\"InActive\"] = 2] = \"InActive\";\n})(EmployeeStatus || (exports.EmployeeStatus = EmployeeStatus = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90cy9lbnVtcy9lbnVtcy50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFZLGNBSVg7QUFKRCxXQUFZLGNBQWM7SUFDeEIsdURBQVU7SUFDVix1REFBVTtJQUNWLDJEQUFZO0FBQ2QsQ0FBQyxFQUpXLGNBQWMsOEJBQWQsY0FBYyxRQUl6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2stNC8uL3RzL2VudW1zL2VudW1zLnRzPzk5ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gRW1wbG95ZWVTdGF0dXMge1xyXG4gIFN0YXR1cyA9IDAsXHJcbiAgQWN0aXZlID0gMSxcclxuICBJbkFjdGl2ZSA9IDJcclxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ts/enums/enums.ts\n");

/***/ }),

/***/ "./ts/index.ts":
/*!*********************!*\
  !*** ./ts/index.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst constants_1 = __webpack_require__(/*! ./constants/constants */ \"./ts/constants/constants.ts\");\nconst addEmployee_1 = __webpack_require__(/*! ./addEmployee */ \"./ts/addEmployee.ts\");\nconst employeeServices_1 = __webpack_require__(/*! ./services/employeeServices */ \"./ts/services/employeeServices.ts\");\nconst roleServices_1 = __webpack_require__(/*! ./services/roleServices */ \"./ts/services/roleServices.ts\");\nconst masterService_1 = __webpack_require__(/*! ./services/masterService */ \"./ts/services/masterService.ts\");\nconst enums_1 = __webpack_require__(/*! ./enums/enums */ \"./ts/enums/enums.ts\");\nlet selectedFilters = constants_1.Constants.EmployeeSelectedFilters;\nlet employees = [];\nlet prevPopUpBtn;\nlet prevSortBtn;\nclass App extends addEmployee_1.default {\n    setAlphbetFilters(id) {\n        let filterBtnEle = document.getElementById(id);\n        let filterbtns = \"\";\n        for (let i = 65; i <= 90; i++)\n            filterbtns += `<button id=\"btn${String.fromCharCode(i + 32)}\" onclick=window.app.onFilterAlphabet('${String.fromCharCode(i + 32)}')>${String.fromCharCode(i)}</button>`;\n        filterBtnEle ? filterBtnEle.innerHTML += filterbtns : \"\";\n    }\n    dropdownFilers(filterData) {\n        let filteredData = [];\n        filterData.forEach(employee => {\n            let flag = true;\n            for (let key in selectedFilters) {\n                if (key != 'alphabet' && selectedFilters[key] && employee[key] != selectedFilters[key])\n                    flag = false;\n            }\n            flag ? filteredData.push(employee) : \"\";\n        });\n        return filteredData;\n    }\n    getDropdownOptions(filters, field) {\n        let options = '';\n        if (field == 'status') {\n            options += `<option value=\"0\">Status</option>`;\n            filters.forEach(ele => {\n                options += `<option value=\"${enums_1.EmployeeStatus[ele]}\">${ele}</option>`;\n            });\n        }\n        else {\n            options += `<option value=\"\">${field[0].toUpperCase() + field.substring(1)}</option>`;\n            filters.forEach(ele => {\n                options += `<option value=\"${ele}\">${ele}</option>`;\n            });\n        }\n        return options;\n    }\n    employeeDropdownFilter(value, key) {\n        selectedFilters[key] = key == 'status' ? parseInt(value) : value;\n        let flag = false;\n        for (let key in selectedFilters)\n            if (key != 'alphabet' && key != 'status' && selectedFilters[key].length > 0)\n                flag = true;\n        !flag ? selectedFilters['status'] != 0 ? flag = true : \"\" : '';\n        flag ? document.querySelector('#hideResetBtns').style.display = \"block\" : document.querySelector('#hideResetBtns').style.display = \"none\";\n    }\n    getFilteredEmployeesbyAlphabet() {\n        let alphabetFilteredEmps = selectedFilters.alphabet ? employees.filter((employee) => (employee.firstname ? employee.firstname : employee.lastname).toLowerCase().startsWith(selectedFilters.alphabet)) : employees;\n        return this.dropdownFilers(alphabetFilteredEmps);\n    }\n    displayFilteredEmployees() {\n        let filteredEmps = this.getFilteredEmployeesbyAlphabet();\n        let empTable = constants_1.Constants.Employeetableheader;\n        filteredEmps.forEach(employee => {\n            let row = constants_1.Constants.EmployeeRow;\n            empTable += row.replaceAll('{{employeeNumber}}', employee.empno).replace('{{firstname}}', employee.firstname).replace('{{lastname}}', employee.lastname).replace('{{image}}', employee.image).replace('{{email}}', employee.email).replace('{{location}}', employee.location)\n                .replace('{{department}}', employee.department).replace('{{role}}', employee.jobTitle).replace('{{status}}', enums_1.EmployeeStatus[employee.status])\n                .replace('{{joiningDate}}', employee.joiningDate);\n        });\n        let tableElement = document.querySelector(\"#employeeTableData\");\n        tableElement ? (tableElement.innerHTML = (filteredEmps.length > 0 ? empTable : `<td colspan=\"9\" style=\"text-align:center; padding:10px 0px\">No data found</td>`)) : \"\";\n    }\n    removeDropdownFilter() {\n        selectedFilters = {\n            alphabet: selectedFilters.alphabet,\n            status: 0,\n            location: '',\n            department: ''\n        };\n        this.employeeDropdownFilter(\"0\", \"status\");\n        this.displayFilteredEmployees();\n    }\n    exportDataToCSV() {\n        let exportData = this.getFilteredEmployeesbyAlphabet();\n        let csvFile = \"S.No, User, Location, Departmant, Role, Employee ID, Status, Join Dt \\n\";\n        exportData.forEach((employee, i) => csvFile += `${i + 1},${employee.firstname + \" \" + employee.lastname}, ${employee.location}, ${employee.department},${employee.jobTitle},${employee.empno},${enums_1.EmployeeStatus[employee.status]},${employee.joiningDate}\\n`);\n        document.body.innerHTML = (`<a style=\"display:none\" href=\"data:text/csv;charset=utf-8,${encodeURI(csvFile)}\" download=\"employees.csv\"></a>`) + document.body.innerHTML;\n        document.links[0].click();\n    }\n    deleteEmployeesUsingCheckbox() {\n        let tableCheckbox = document.querySelectorAll(\"input.table-checkbox\");\n        let selectedEmpIds = Array.from(tableCheckbox).filter(ele => ele.checked).map((element) => element.id);\n        employees = employees.filter(employee => employee.status == 1 ? employee.status = selectedEmpIds.includes(employee.empno) ? 2 : 1 : true);\n        this.displayFilteredEmployees();\n        this.loadSelectDropdown();\n    }\n    popUpDisplay(e) {\n        e = e.parentNode;\n        if (prevPopUpBtn && prevPopUpBtn == e) {\n            prevPopUpBtn.classList.toggle(\"view-toggle\");\n            return;\n        }\n        e.classList.add(\"view-toggle\");\n        prevPopUpBtn = e;\n    }\n    hidePopUp() {\n        if (prevPopUpBtn && prevPopUpBtn.classList.contains(\"view-toggle\"))\n            prevPopUpBtn.classList.remove(\"view-toggle\");\n    }\n    sortData(key, order, selector) {\n        prevSortBtn ? prevSortBtn.style.background = \"\" : \"\";\n        let sortedData = employees.sort(function (emp1, emp2) {\n            let employee1, employee2;\n            employee1 = (key == \"name\" ? `${emp1.firstname} ${emp1.lastname}`.toLocaleLowerCase() : key == 'empno' ? parseInt(emp1[key]) : (`${emp1[key]}`).toLowerCase());\n            employee2 = (key == \"name\" ? `${emp2.firstname} ${emp2.lastname}`.toLocaleLowerCase() : key == 'empno' ? parseInt(emp2[key]) : (`${emp2[key]}`).toLowerCase());\n            if (order != \"desc\")\n                return employee1 > employee2 ? 1 : -1;\n            return employee1 > employee2 ? -1 : 1;\n        });\n        employees = sortedData;\n        this.displayFilteredEmployees();\n        let currentEle = document.querySelector(selector);\n        currentEle ? currentEle.style.background = \"rgb(251, 192, 192)\" : \"\";\n        prevSortBtn = currentEle;\n    }\n    deleteEmployee(id) {\n        employees.forEach(employee => (employee.empno == id ? employee.status = 2 : ''));\n        this.loadSelectDropdown();\n    }\n    viewOrEditEmployee(empId, mode) {\n        window.location.href = `employee.html?id=${empId}&&mode=${mode}`;\n    }\n    employeeCheckBox(e) {\n        var _a, _b;\n        let tableCheckbox = document.querySelectorAll(\"input.table-checkbox\");\n        e && (tableCheckbox === null || tableCheckbox === void 0 ? void 0 : tableCheckbox.forEach((element) => e ? element.checked = e.checked : \"\"));\n        let flag = false;\n        tableCheckbox.forEach((element) => element.checked ? (flag = true) : \"\");\n        flag ? (_a = document.getElementById(\"deleteBtn\")) === null || _a === void 0 ? void 0 : _a.removeAttribute(\"disabled\") : (_b = document.getElementById(\"deleteBtn\")) === null || _b === void 0 ? void 0 : _b.setAttribute(\"disabled\", \"true\");\n        flag = true;\n        tableCheckbox.forEach(element => !element.checked ? flag = false : \"\");\n        tableCheckbox.length ? document.querySelector(\".table-check-box input\").checked = flag : \"\";\n    }\n    onFilterAlphabet(alphabet) {\n        let filterBtns = document.querySelectorAll('#filterBtns button');\n        filterBtns.forEach(ele => {\n            if (ele.classList.contains('active'))\n                ele.classList.remove('active');\n            if (ele.id == 'btn' + alphabet)\n                ele.classList.add('active');\n        });\n        selectedFilters.alphabet = alphabet;\n        this.displayFilteredEmployees();\n    }\n    sideBarToggle() {\n        document.querySelector(\".sidebar\").classList.toggle(\"sidebar-toggle\");\n    }\n    removeAlphabetFilter() {\n        selectedFilters = {\n            alphabet: '',\n            status: 0,\n            location: '',\n            department: ''\n        };\n        this.employeeDropdownFilter(\"0\", \"status\");\n        this.displayFilteredEmployees();\n        let filterBtns = document.querySelectorAll('#filterBtns button');\n        filterBtns.forEach(ele => {\n            if (ele.classList.contains('active'))\n                ele.classList.remove('active');\n        });\n        let dropDownFilterForm = document.querySelector('#dropdownFilterForm');\n        dropDownFilterForm ? dropDownFilterForm.reset() : '';\n    }\n    loadEmployees() {\n        employees = employeeServices_1.employeeServices.getAll();\n    }\n    loadSelectDropdown() {\n        document.querySelectorAll('.select-item.status')[1] ? document.querySelectorAll('.status')[1].innerHTML = this.getDropdownOptions(masterService_1.masterService.getStatus(employees), 'status') : '';\n        document.querySelectorAll('.select-item.location')[1] ? document.querySelectorAll('.location')[1].innerHTML = this.getDropdownOptions(masterService_1.masterService.getLocations(employees), 'location') : '';\n        document.querySelectorAll('.select-item.department')[1] ? document.querySelectorAll('.department')[1].innerHTML = this.getDropdownOptions(masterService_1.masterService.getDepartments(employees), 'department') : '';\n        document.querySelectorAll('.select-item.status')[1] ? document.querySelectorAll('.status')[1].value = `${selectedFilters.status}` : '';\n        document.querySelectorAll('.select-item.location')[1] ? document.querySelectorAll('.location')[1].value = selectedFilters.location : '';\n        document.querySelectorAll('.select-item.department')[1] ? document.querySelectorAll('.department')[1].value = selectedFilters.department : '';\n        this.displayFilteredEmployees();\n    }\n    loadSelectMobileDropdown() {\n        document.querySelectorAll('.select-item.status')[0] ? document.querySelectorAll('.status')[0].innerHTML = this.getDropdownOptions(masterService_1.masterService.getStatus(employees), 'status') : '';\n        document.querySelectorAll('.select-item.location')[0] ? document.querySelectorAll('.location')[0].innerHTML = this.getDropdownOptions(masterService_1.masterService.getLocations(employees), 'location') : '';\n        document.querySelectorAll('.select-item.department')[0] ? document.querySelectorAll('.department')[0].innerHTML = this.getDropdownOptions(masterService_1.masterService.getDepartments(employees), 'department') : '';\n    }\n    loadFilters() {\n        this.setAlphbetFilters(\"filterBtns\");\n        this.setAlphbetFilters(\"buttonsWrapper\");\n    }\n    initilalise() {\n        this.loadEmployees();\n        this.loadSelectDropdown();\n        this.loadSelectMobileDropdown();\n        this.loadFilters();\n        this.getRoleParams();\n        this.getEmployeeParams();\n        this.getRoleEmployees();\n        this.displayRoles(roleServices_1.roleServices.getAll());\n        let hideResetBtns = document.querySelector('#hideResetBtns');\n        hideResetBtns ? hideResetBtns.style.display = \"none\" : '';\n    }\n}\nconst app = new App();\nwindow.app = app;\nwindow.onload = () => app.initilalise();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ts/index.ts\n");

/***/ }),

/***/ "./ts/models/Employees.ts":
/*!********************************!*\
  !*** ./ts/models/Employees.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Employee = void 0;\nclass Employee {\n    constructor(employee) {\n        Object.assign(this, employee);\n    }\n}\nexports.Employee = Employee;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90cy9tb2RlbHMvRW1wbG95ZWVzLnRzIiwibWFwcGluZ3MiOiI7OztBQUVBLE1BQWEsUUFBUTtJQWtCakIsWUFBWSxRQUFrQjtRQUMxQixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNsQyxDQUFDO0NBQ0o7QUFyQkQsNEJBcUJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFzay00Ly4vdHMvbW9kZWxzL0VtcGxveWVlcy50cz9hZWE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVtcGxveWVlU3RhdHVzIH0gZnJvbSBcIi4uL2VudW1zL2VudW1zXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgRW1wbG95ZWUge1xyXG4gICAgaW1hZ2U6IHN0cmluZztcclxuICAgIGZpcnN0bmFtZTogc3RyaW5nO1xyXG4gICAgbGFzdG5hbWU6IHN0cmluZztcclxuICAgIGVtYWlsOiBzdHJpbmc7XHJcbiAgICBlbXBubzogc3RyaW5nO1xyXG4gICAgbG9jYXRpb246IHN0cmluZztcclxuICAgIG1vYmlsZTogc3RyaW5nO1xyXG4gICAgZG9iOiBzdHJpbmc7XHJcbiAgICBkZXBhcnRtZW50OiBzdHJpbmc7XHJcbiAgICBzdGF0dXM6IEVtcGxveWVlU3RhdHVzO1xyXG4gICAgam9iVGl0bGU6IHN0cmluZztcclxuICAgIGpvaW5pbmdEYXRlOiBzdHJpbmc7XHJcbiAgICBhc3NpZ25NYW5hZ2VyOiBzdHJpbmc7XHJcbiAgICBhc3NpZ25Qcm9qZWN0OiBzdHJpbmc7XHJcbiAgICBpc0NoZWNrZWRSb2xlPzogYm9vbGVhbjtcclxuICAgIGlzRGVsZXRlPzogYm9vbGVhbjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihlbXBsb3llZTogRW1wbG95ZWUpIHtcclxuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGVtcGxveWVlKTtcclxuICAgIH1cclxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ts/models/Employees.ts\n");

/***/ }),

/***/ "./ts/models/Role.ts":
/*!***************************!*\
  !*** ./ts/models/Role.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Role = void 0;\nclass Role {\n    constructor(role) {\n        Object.assign(this, role);\n    }\n}\nexports.Role = Role;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90cy9tb2RlbHMvUm9sZS50cyIsIm1hcHBpbmdzIjoiOzs7QUFFQSxNQUFhLElBQUk7SUFPYixZQUFZLElBQVU7UUFDbEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDOUIsQ0FBQztDQUNKO0FBVkQsb0JBVUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXNrLTQvLi90cy9tb2RlbHMvUm9sZS50cz80NDU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVtcGxveWVlIH0gZnJvbSBcIi4vRW1wbG95ZWVzXCJcclxuXHJcbmV4cG9ydCBjbGFzcyBSb2xlIHtcclxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgZGVwYXJ0bWVudDogc3RyaW5nO1xyXG4gICAgcHVibGljIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgbG9jYXRpb246IHN0cmluZztcclxuICAgIHB1YmxpYyBpZDogc3RyaW5nO1xyXG4gICAgcHVibGljIGVtcGxveWVlc0Fzc2lnbmVkOiBFbXBsb3llZVtdO1xyXG4gICAgY29uc3RydWN0b3Iocm9sZTogUm9sZSkge1xyXG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgcm9sZSk7XHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ts/models/Role.ts\n");

/***/ }),

/***/ "./ts/role.ts":
/*!********************!*\
  !*** ./ts/role.ts ***!
  \********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst constants_1 = __webpack_require__(/*! ./constants/constants */ \"./ts/constants/constants.ts\");\nconst roleServices_1 = __webpack_require__(/*! ./services/roleServices */ \"./ts/services/roleServices.ts\");\n// getting the role Id\nlet roleId;\n// getting role\nlet role;\nlet roleDescription = document.getElementById('description');\nlet assignedEmployees;\n// invoking display assigned employees \nclass DisplayRoleEmployees {\n    //displaying the assigned employees\n    displayRoleAssignedEmployees(data) {\n        let innerData = \"\";\n        data.forEach(employee => {\n            let roleDetailCard = constants_1.Constants.RoleDetailsEmployeeCard;\n            roleDetailCard = roleDetailCard.replace('{{firstname}}', employee.firstname).replace('{{lastname}}', employee.lastname).replace('{{image}}', employee.image).replace('{{email}}', employee.email).replace('{{empno}}', employee.empno).replace('{{department}}', employee.department).replace('{{location}}', employee.location);\n            innerData += roleDetailCard;\n        });\n        let employeeProfiles = document.querySelector('.role-all-profiles');\n        employeeProfiles ? employeeProfiles.innerHTML = innerData : '';\n    }\n    getRoleEmployees() {\n        roleId = window.location.search.slice(4);\n        role = roleServices_1.roleServices.getById(roleId);\n        assignedEmployees = role ? role.employeesAssigned : [];\n        roleDescription ? roleDescription.innerHTML = role ? role.description : \"\" : \"\";\n        assignedEmployees ? this.displayRoleAssignedEmployees(assignedEmployees) : '';\n    }\n}\nexports[\"default\"] = DisplayRoleEmployees;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90cy9yb2xlLnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsb0dBQWtEO0FBR2xELDJHQUF1RDtBQUN2RCxzQkFBc0I7QUFDdEIsSUFBSSxNQUFjO0FBQ2xCLGVBQWU7QUFDZixJQUFJLElBQVUsQ0FBQztBQUVmLElBQUksZUFBZSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUEwQjtBQUNyRixJQUFJLGlCQUE2QixDQUFDO0FBRWxDLHVDQUF1QztBQUV2QyxNQUFNLG9CQUFvQjtJQUV0QixtQ0FBbUM7SUFDNUIsNEJBQTRCLENBQUMsSUFBZ0I7UUFDaEQsSUFBSSxTQUFTLEdBQVcsRUFBRSxDQUFDO1FBQzNCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDcEIsSUFBSSxjQUFjLEdBQUcscUJBQVMsQ0FBQyx1QkFBdUIsQ0FBQztZQUN2RCxjQUFjLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDalUsU0FBUyxJQUFJLGNBQWMsQ0FBQztRQUNoQyxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksZ0JBQWdCLEdBQTBCLFFBQVEsQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUMzRixnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ25FLENBQUM7SUFFTSxnQkFBZ0I7UUFDbkIsTUFBTSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN6QyxJQUFJLEdBQUcsMkJBQVksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUN2RCxlQUFlLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNoRixpQkFBaUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLDRCQUE0QixDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUNsRixDQUFDO0NBQ0o7QUFDRCxxQkFBZSxvQkFBb0IsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2stNC8uL3RzL3JvbGUudHM/YTE2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tIFwiLi9jb25zdGFudHMvY29uc3RhbnRzXCI7XHJcbmltcG9ydCB7IEVtcGxveWVlIH0gZnJvbSBcIi4vbW9kZWxzL0VtcGxveWVlc1wiO1xyXG5pbXBvcnQgeyBSb2xlIH0gZnJvbSBcIi4vbW9kZWxzL1JvbGVcIjtcclxuaW1wb3J0IHsgcm9sZVNlcnZpY2VzIH0gZnJvbSBcIi4vc2VydmljZXMvcm9sZVNlcnZpY2VzXCI7XHJcbi8vIGdldHRpbmcgdGhlIHJvbGUgSWRcclxubGV0IHJvbGVJZDogc3RyaW5nXHJcbi8vIGdldHRpbmcgcm9sZVxyXG5sZXQgcm9sZTogUm9sZTtcclxuXHJcbmxldCByb2xlRGVzY3JpcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVzY3JpcHRpb24nKSBhcyBIVE1MRGl2RWxlbWVudCB8IG51bGxcclxubGV0IGFzc2lnbmVkRW1wbG95ZWVzOiBFbXBsb3llZVtdO1xyXG5cclxuLy8gaW52b2tpbmcgZGlzcGxheSBhc3NpZ25lZCBlbXBsb3llZXMgXHJcblxyXG5jbGFzcyBEaXNwbGF5Um9sZUVtcGxveWVlcyB7XHJcblxyXG4gICAgLy9kaXNwbGF5aW5nIHRoZSBhc3NpZ25lZCBlbXBsb3llZXNcclxuICAgIHB1YmxpYyBkaXNwbGF5Um9sZUFzc2lnbmVkRW1wbG95ZWVzKGRhdGE6IEVtcGxveWVlW10pIHtcclxuICAgICAgICBsZXQgaW5uZXJEYXRhOiBzdHJpbmcgPSBcIlwiO1xyXG4gICAgICAgIGRhdGEuZm9yRWFjaChlbXBsb3llZSA9PiB7XHJcbiAgICAgICAgICAgIGxldCByb2xlRGV0YWlsQ2FyZCA9IENvbnN0YW50cy5Sb2xlRGV0YWlsc0VtcGxveWVlQ2FyZDtcclxuICAgICAgICAgICAgcm9sZURldGFpbENhcmQgPSByb2xlRGV0YWlsQ2FyZC5yZXBsYWNlKCd7e2ZpcnN0bmFtZX19JywgZW1wbG95ZWUuZmlyc3RuYW1lKS5yZXBsYWNlKCd7e2xhc3RuYW1lfX0nLCBlbXBsb3llZS5sYXN0bmFtZSkucmVwbGFjZSgne3tpbWFnZX19JywgZW1wbG95ZWUuaW1hZ2UpLnJlcGxhY2UoJ3t7ZW1haWx9fScsIGVtcGxveWVlLmVtYWlsKS5yZXBsYWNlKCd7e2VtcG5vfX0nLCBlbXBsb3llZS5lbXBubykucmVwbGFjZSgne3tkZXBhcnRtZW50fX0nLCBlbXBsb3llZS5kZXBhcnRtZW50KS5yZXBsYWNlKCd7e2xvY2F0aW9ufX0nLCBlbXBsb3llZS5sb2NhdGlvbik7XHJcbiAgICAgICAgICAgIGlubmVyRGF0YSArPSByb2xlRGV0YWlsQ2FyZDtcclxuICAgICAgICB9KTtcclxuICAgICAgICBsZXQgZW1wbG95ZWVQcm9maWxlczogSFRNTERpdkVsZW1lbnQgfCBudWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJvbGUtYWxsLXByb2ZpbGVzJyk7XHJcbiAgICAgICAgZW1wbG95ZWVQcm9maWxlcyA/IGVtcGxveWVlUHJvZmlsZXMuaW5uZXJIVE1MID0gaW5uZXJEYXRhIDogJyc7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldFJvbGVFbXBsb3llZXMoKSB7XHJcbiAgICAgICAgcm9sZUlkID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaC5zbGljZSg0KTtcclxuICAgICAgICByb2xlID0gcm9sZVNlcnZpY2VzLmdldEJ5SWQocm9sZUlkKTtcclxuICAgICAgICBhc3NpZ25lZEVtcGxveWVlcyA9IHJvbGUgPyByb2xlLmVtcGxveWVlc0Fzc2lnbmVkIDogW107XHJcbiAgICAgICAgcm9sZURlc2NyaXB0aW9uID8gcm9sZURlc2NyaXB0aW9uLmlubmVySFRNTCA9IHJvbGUgPyByb2xlLmRlc2NyaXB0aW9uIDogXCJcIiA6IFwiXCI7XHJcbiAgICAgICAgYXNzaWduZWRFbXBsb3llZXMgPyB0aGlzLmRpc3BsYXlSb2xlQXNzaWduZWRFbXBsb3llZXMoYXNzaWduZWRFbXBsb3llZXMpIDogJyc7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgRGlzcGxheVJvbGVFbXBsb3llZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ts/role.ts\n");

/***/ }),

/***/ "./ts/roles.ts":
/*!*********************!*\
  !*** ./ts/roles.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst addRole_1 = __webpack_require__(/*! ./addRole */ \"./ts/addRole.ts\");\nconst constants_1 = __webpack_require__(/*! ./constants/constants */ \"./ts/constants/constants.ts\");\nconst masterService_1 = __webpack_require__(/*! ./services/masterService */ \"./ts/services/masterService.ts\");\nconst roleServices_1 = __webpack_require__(/*! ./services/roleServices */ \"./ts/services/roleServices.ts\");\nlet filterDropDown = { department: '', location: '' };\nlet hideResetBtns = document.querySelector('#hideResetBtns');\n//on change select dropdown filter\nhideResetBtns ? hideResetBtns.style.display = \"none\" : '';\nclass Roles extends addRole_1.default {\n    getSelectOptions(filters, field) {\n        let options = '';\n        options += `<option value=\"\">${field[0].toUpperCase() + field.substring(1)}</option>`;\n        filters.forEach(ele => {\n            options += `<option value=\"${ele}\">${ele}</option>`;\n        });\n        return options;\n    }\n    // displaying the all the roles\n    displayRoles(roles) {\n        let innerData = \"\";\n        roles.forEach((role) => {\n            var _a;\n            let roleCardData = constants_1.Constants.RoleCard;\n            let imageDivision = `<div class=\"top\"><img src=\"{{employeeImage}}\" height=\"20px\" alt=\"profile\" /></div>`;\n            let imageCardContainer = ((_a = role.employeesAssigned) === null || _a === void 0 ? void 0 : _a.length) > 4 ? `<div class=\"top\"> +${role.employeesAssigned.length - 4}</div>` : \"\";\n            imageCardContainer += role.employeesAssigned.splice(0, 4).map(employee => imageDivision.replace('{{employeeImage}}', employee.image));\n            roleCardData = roleCardData.replaceAll(\"{{roleId}}\", role.id).replace(\"{{roleName}}\", role.name).replace(\"{{roleLocation}}\", role.location).replace(\"{{roleDepartment}}\", role.department).replace('{{roleCardImageContainer}}', imageCardContainer);\n            innerData += roleCardData;\n        });\n        let roleCards = document.querySelector('.roles-items');\n        roleCards ? roleCards.innerHTML = roles.length > 0 ? innerData : '<div class=\"noDataFound\">No data found</div>' : '';\n    }\n    loadDropdownFilters() {\n        document.querySelector('select.roles-location') ? document.querySelector('select.roles-location').innerHTML = this.getSelectOptions(masterService_1.masterService.getRoleLocations(), \"location\") : \"\";\n        document.querySelector('select.roles-department') ? document.querySelector('select.roles-department').innerHTML = this.getSelectOptions(masterService_1.masterService.getRoleDepartments(), \"department\") : \"\";\n    }\n    filterChange(value, key) {\n        filterDropDown[key] = value;\n        let flag = false;\n        for (let key in filterDropDown) {\n            if (filterDropDown[key])\n                flag = true;\n        }\n        flag ? hideResetBtns.style.display = \"block\" : hideResetBtns.style.display = \"none\";\n    }\n    // on click edit in cards in page redirect to add role page and edit\n    redirectingToEditRole(id) {\n        window.location.href = `addRoles.html?id=${id}`;\n    }\n    // redirecting to roles details page by clicking view-all-employees to see assigned employees\n    redirectToEmployees(id) {\n        window.location.href = 'rolesDetails.html?id=' + id;\n    }\n}\nlet roleObj = new Roles();\n// on clicking apply filter will be applied\n(_a = document.querySelector('.right-item .apply')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', (e) => {\n    e.preventDefault();\n    let filteredData = [];\n    roleServices_1.roleServices.getAll().forEach((role) => {\n        let flag = true;\n        for (let key in filterDropDown) {\n            if (filterDropDown[key] && role[key] != filterDropDown[key])\n                flag = false;\n        }\n        flag ? filteredData.push(role) : \"\";\n    });\n    roleObj.displayRoles(filteredData);\n});\n// on clicking reset displaying the all the roles\nroleObj.loadDropdownFilters();\n(_b = document.querySelector('.right-item .reset')) === null || _b === void 0 ? void 0 : _b.addEventListener('click', () => roleObj.displayRoles(roleServices_1.roleServices.getAll()));\nexports[\"default\"] = Roles;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ts/roles.ts\n");

/***/ }),

/***/ "./ts/services/employeeServices.ts":
/*!*****************************************!*\
  !*** ./ts/services/employeeServices.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.employeeServices = exports.EmployeeService = void 0;\nconst Employees_1 = __webpack_require__(/*! ../models/Employees */ \"./ts/models/Employees.ts\");\nclass EmployeeService {\n    getAll() {\n        return (JSON.parse(localStorage.getItem(\"EmployeeData\")) || []).map(emp => new Employees_1.Employee(emp));\n    }\n    set(employees) {\n        localStorage.setItem(\"EmployeeData\", JSON.stringify(employees));\n    }\n    getById(id) {\n        return this.getAll().find((employee) => employee.empno == id);\n    }\n    delete(id) {\n        this.set(this.getAll().filter(employee => employee.empno != id));\n    }\n    update(employee) {\n        let employees = this.getAll();\n        let index = employees.findIndex(ele => ele.empno == employee.empno);\n        employees[index] = employee;\n        this.set(employees);\n    }\n    create(employee) {\n        let employees = this.getAll();\n        employees.push(employee);\n        this.set(employees);\n    }\n    save(employee) {\n        let emp = this.getById(employee.empno);\n        emp ? this.update(employee) : this.create(employee);\n    }\n}\nexports.EmployeeService = EmployeeService;\nexports.employeeServices = new EmployeeService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90cy9zZXJ2aWNlcy9lbXBsb3llZVNlcnZpY2VzLnRzIiwibWFwcGluZ3MiOiI7OztBQUFBLCtGQUErQztBQUUvQyxNQUFhLGVBQWU7SUFDeEIsTUFBTTtRQUNGLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLG9CQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNsRyxDQUFDO0lBRUQsR0FBRyxDQUFDLFNBQXFCO1FBQ3JCLFlBQVksQ0FBQyxPQUFPLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUNwRSxDQUFDO0lBRUQsT0FBTyxDQUFDLEVBQVU7UUFDZCxPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFrQixFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFRCxNQUFNLENBQUMsRUFBVTtRQUNiLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBRUQsTUFBTSxDQUFDLFFBQWtCO1FBQ3JCLElBQUksU0FBUyxHQUFlLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUMxQyxJQUFJLEtBQUssR0FBVyxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUUsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLFFBQVEsQ0FBQztRQUM1QixJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxNQUFNLENBQUMsUUFBa0I7UUFDckIsSUFBSSxTQUFTLEdBQWUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQzFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSSxDQUFDLFFBQWtCO1FBQ25CLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN4RCxDQUFDO0NBQ0o7QUFsQ0QsMENBa0NDO0FBRVUsd0JBQWdCLEdBQUcsSUFBSSxlQUFlLEVBQUUsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2stNC8uL3RzL3NlcnZpY2VzL2VtcGxveWVlU2VydmljZXMudHM/NjdhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbXBsb3llZSB9IGZyb20gXCIuLi9tb2RlbHMvRW1wbG95ZWVzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgRW1wbG95ZWVTZXJ2aWNlIHtcclxuICAgIGdldEFsbCgpOiBFbXBsb3llZVtdIHtcclxuICAgICAgICByZXR1cm4gKEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJFbXBsb3llZURhdGFcIikpIHx8IFtdKS5tYXAoZW1wID0+IG5ldyBFbXBsb3llZShlbXApKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQoZW1wbG95ZWVzOiBFbXBsb3llZVtdKTogdm9pZCB7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJFbXBsb3llZURhdGFcIiwgSlNPTi5zdHJpbmdpZnkoZW1wbG95ZWVzKSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0QnlJZChpZDogc3RyaW5nKTogRW1wbG95ZWUge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmdldEFsbCgpLmZpbmQoKGVtcGxveWVlOiBFbXBsb3llZSkgPT4gZW1wbG95ZWUuZW1wbm8gPT0gaWQpO1xyXG4gICAgfVxyXG5cclxuICAgIGRlbGV0ZShpZDogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZXQodGhpcy5nZXRBbGwoKS5maWx0ZXIoZW1wbG95ZWUgPT4gZW1wbG95ZWUuZW1wbm8gIT0gaWQpKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoZW1wbG95ZWU6IEVtcGxveWVlKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGVtcGxveWVlczogRW1wbG95ZWVbXSA9IHRoaXMuZ2V0QWxsKCk7XHJcbiAgICAgICAgbGV0IGluZGV4OiBudW1iZXIgPSBlbXBsb3llZXMuZmluZEluZGV4KGVsZSA9PiBlbGUuZW1wbm8gPT0gZW1wbG95ZWUuZW1wbm8pO1xyXG4gICAgICAgIGVtcGxveWVlc1tpbmRleF0gPSBlbXBsb3llZTtcclxuICAgICAgICB0aGlzLnNldChlbXBsb3llZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZShlbXBsb3llZTogRW1wbG95ZWUpOiB2b2lkIHtcclxuICAgICAgICBsZXQgZW1wbG95ZWVzOiBFbXBsb3llZVtdID0gdGhpcy5nZXRBbGwoKTtcclxuICAgICAgICBlbXBsb3llZXMucHVzaChlbXBsb3llZSk7XHJcbiAgICAgICAgdGhpcy5zZXQoZW1wbG95ZWVzKTtcclxuICAgIH1cclxuXHJcbiAgICBzYXZlKGVtcGxveWVlOiBFbXBsb3llZSk6IHZvaWQge1xyXG4gICAgICAgIGxldCBlbXAgPSB0aGlzLmdldEJ5SWQoZW1wbG95ZWUuZW1wbm8pO1xyXG4gICAgICAgIGVtcCA/IHRoaXMudXBkYXRlKGVtcGxveWVlKSA6IHRoaXMuY3JlYXRlKGVtcGxveWVlKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGxldCBlbXBsb3llZVNlcnZpY2VzID0gbmV3IEVtcGxveWVlU2VydmljZSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ts/services/employeeServices.ts\n");

/***/ }),

/***/ "./ts/services/formValidation.ts":
/*!***************************************!*\
  !*** ./ts/services/formValidation.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.utility = exports.Utility = void 0;\nconst employeeServices_1 = __webpack_require__(/*! ./employeeServices */ \"./ts/services/employeeServices.ts\");\nclass Utility {\n    //validate the email\n    isValidEmail(email) {\n        let pattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n        let spanElement = document.querySelector(`span#email`);\n        if (!pattern.test(email)) {\n            this.appendError(spanElement, '<b class=\"exclamation\"><b>!</b></b> please enter valid email address');\n            return false;\n        }\n        spanElement ? spanElement.removeAttribute('error') : \"\";\n        return true;\n    }\n    // vallidate first name\n    isValidFirstName(name) {\n        let spanElement = document.querySelector(`span#firstname`);\n        if (!name || name.length <= 3) {\n            this.appendError(spanElement, '<b class=\"exclamation\"><b>!</b></b> length should be greater then three');\n            return false;\n        }\n        spanElement ? spanElement.removeAttribute('error') : \"\";\n        return true;\n    }\n    //validating the empno\n    isValidEmployeeNumber(empno) {\n        let spanElement = document.querySelector(`span#empno`);\n        empno = `${parseInt(empno)}`;\n        let employee = employeeServices_1.employeeServices.getById(empno);\n        if (employee) {\n            this.appendError(spanElement, '<b class=\"exclamation\"><b>!</b></b> employee number already exists');\n            return false;\n        }\n        spanElement ? spanElement.removeAttribute('error') : \"\";\n        return true;\n    }\n    validateForm(employee) {\n        let employee_1 = employeeServices_1.employeeServices.getById(employee.empno);\n        if (employee_1)\n            return this.isValidEmail(employee.email) && this.isValidFirstName(employee.firstname);\n        else\n            return this.isValidEmail(employee.email) && this.isValidFirstName(employee.firstname) && this.isValidEmployeeNumber(employee.empno);\n    }\n    appendError(element, message) {\n        element.innerHTML = message;\n        element.setAttribute('error', '');\n    }\n}\nexports.Utility = Utility;\nexports.utility = new Utility();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90cy9zZXJ2aWNlcy9mb3JtVmFsaWRhdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7QUFDQSw4R0FBc0Q7QUFDdEQsTUFBYSxPQUFPO0lBQ2hCLG9CQUFvQjtJQUNwQixZQUFZLENBQUMsS0FBYTtRQUN0QixJQUFJLE9BQU8sR0FBVyxpREFBaUQsQ0FBQztRQUN4RSxJQUFJLFdBQVcsR0FBdUIsUUFBUSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUFFLHNFQUFzRSxDQUFDO1lBRXJHLE9BQU8sS0FBSyxDQUFDO1FBQ2pCLENBQUM7UUFDRCxXQUFXLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUV4RCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQsdUJBQXVCO0lBQ3ZCLGdCQUFnQixDQUFDLElBQVk7UUFDekIsSUFBSSxXQUFXLEdBQXVCLFFBQVEsQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUMvRSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFLENBQUM7WUFDNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUseUVBQXlFLENBQUM7WUFFeEcsT0FBTyxLQUFLLENBQUM7UUFDakIsQ0FBQztRQUNELFdBQVcsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBRXhELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxzQkFBc0I7SUFDdEIscUJBQXFCLENBQUMsS0FBYTtRQUMvQixJQUFJLFdBQVcsR0FBdUIsUUFBUSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMzRSxLQUFLLEdBQUcsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDNUIsSUFBSSxRQUFRLEdBQWEsbUNBQWdCLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pELElBQUksUUFBUSxFQUFFLENBQUM7WUFDWCxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsRUFBRSxvRUFBb0UsQ0FBQztZQUVuRyxPQUFPLEtBQUssQ0FBQztRQUNqQixDQUFDO1FBQ0QsV0FBVyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFFeEQsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVELFlBQVksQ0FBQyxRQUFrQjtRQUMzQixJQUFJLFVBQVUsR0FBYSxtQ0FBZ0IsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BFLElBQUksVUFBVTtZQUNWLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQzs7WUFFdEYsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFNUksQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUF3QixFQUFFLE9BQWU7UUFDakQsT0FBTyxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUM7UUFDNUIsT0FBTyxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDO0lBQ3JDLENBQUM7Q0FDSjtBQXhERCwwQkF3REM7QUFDVSxlQUFPLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2stNC8uL3RzL3NlcnZpY2VzL2Zvcm1WYWxpZGF0aW9uLnRzP2FiNzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW1wbG95ZWUgfSBmcm9tIFwiLi4vbW9kZWxzL0VtcGxveWVlc1wiO1xyXG5pbXBvcnQgeyBlbXBsb3llZVNlcnZpY2VzIH0gZnJvbSBcIi4vZW1wbG95ZWVTZXJ2aWNlc1wiO1xyXG5leHBvcnQgY2xhc3MgVXRpbGl0eSB7XHJcbiAgICAvL3ZhbGlkYXRlIHRoZSBlbWFpbFxyXG4gICAgaXNWYWxpZEVtYWlsKGVtYWlsOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgcGF0dGVybjogUmVnRXhwID0gL15bYS16QS1aMC05Ll8tXStAW2EtekEtWjAtOS4tXStcXC5bYS16QS1aXXsyLDR9JC87XHJcbiAgICAgICAgbGV0IHNwYW5FbGVtZW50OiBIVE1MRWxlbWVudCB8IG51bGwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBzcGFuI2VtYWlsYCk7XHJcbiAgICAgICAgaWYgKCFwYXR0ZXJuLnRlc3QoZW1haWwpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXBwZW5kRXJyb3Ioc3BhbkVsZW1lbnQsICc8YiBjbGFzcz1cImV4Y2xhbWF0aW9uXCI+PGI+ITwvYj48L2I+IHBsZWFzZSBlbnRlciB2YWxpZCBlbWFpbCBhZGRyZXNzJylcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc3BhbkVsZW1lbnQgPyBzcGFuRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2Vycm9yJykgOiBcIlwiO1xyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyB2YWxsaWRhdGUgZmlyc3QgbmFtZVxyXG4gICAgaXNWYWxpZEZpcnN0TmFtZShuYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICBsZXQgc3BhbkVsZW1lbnQ6IEhUTUxFbGVtZW50IHwgbnVsbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYHNwYW4jZmlyc3RuYW1lYCk7XHJcbiAgICAgICAgaWYgKCFuYW1lIHx8IG5hbWUubGVuZ3RoIDw9IDMpIHtcclxuICAgICAgICAgICAgdGhpcy5hcHBlbmRFcnJvcihzcGFuRWxlbWVudCwgJzxiIGNsYXNzPVwiZXhjbGFtYXRpb25cIj48Yj4hPC9iPjwvYj4gbGVuZ3RoIHNob3VsZCBiZSBncmVhdGVyIHRoZW4gdGhyZWUnKVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzcGFuRWxlbWVudCA/IHNwYW5FbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnZXJyb3InKSA6IFwiXCI7XHJcblxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8vdmFsaWRhdGluZyB0aGUgZW1wbm9cclxuICAgIGlzVmFsaWRFbXBsb3llZU51bWJlcihlbXBubzogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgICAgICAgbGV0IHNwYW5FbGVtZW50OiBIVE1MRWxlbWVudCB8IG51bGwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBzcGFuI2VtcG5vYCk7XHJcbiAgICAgICAgZW1wbm8gPSBgJHtwYXJzZUludChlbXBubyl9YFxyXG4gICAgICAgIGxldCBlbXBsb3llZTogRW1wbG95ZWUgPSBlbXBsb3llZVNlcnZpY2VzLmdldEJ5SWQoZW1wbm8pO1xyXG4gICAgICAgIGlmIChlbXBsb3llZSkge1xyXG4gICAgICAgICAgICB0aGlzLmFwcGVuZEVycm9yKHNwYW5FbGVtZW50LCAnPGIgY2xhc3M9XCJleGNsYW1hdGlvblwiPjxiPiE8L2I+PC9iPiBlbXBsb3llZSBudW1iZXIgYWxyZWFkeSBleGlzdHMnKVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzcGFuRWxlbWVudCA/IHNwYW5FbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnZXJyb3InKSA6IFwiXCI7XHJcblxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHZhbGlkYXRlRm9ybShlbXBsb3llZTogRW1wbG95ZWUpOiBib29sZWFuIHtcclxuICAgICAgICBsZXQgZW1wbG95ZWVfMTogRW1wbG95ZWUgPSBlbXBsb3llZVNlcnZpY2VzLmdldEJ5SWQoZW1wbG95ZWUuZW1wbm8pO1xyXG4gICAgICAgIGlmIChlbXBsb3llZV8xKVxyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5pc1ZhbGlkRW1haWwoZW1wbG95ZWUuZW1haWwpICYmIHRoaXMuaXNWYWxpZEZpcnN0TmFtZShlbXBsb3llZS5maXJzdG5hbWUpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaXNWYWxpZEVtYWlsKGVtcGxveWVlLmVtYWlsKSAmJiB0aGlzLmlzVmFsaWRGaXJzdE5hbWUoZW1wbG95ZWUuZmlyc3RuYW1lKSAmJiB0aGlzLmlzVmFsaWRFbXBsb3llZU51bWJlcihlbXBsb3llZS5lbXBubyk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGFwcGVuZEVycm9yKGVsZW1lbnQ6IEhUTUxTcGFuRWxlbWVudCwgbWVzc2FnZTogc3RyaW5nKSB7XHJcbiAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSBtZXNzYWdlO1xyXG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdlcnJvcicsICcnKVxyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBsZXQgdXRpbGl0eSA9IG5ldyBVdGlsaXR5KCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ts/services/formValidation.ts\n");

/***/ }),

/***/ "./ts/services/masterService.ts":
/*!**************************************!*\
  !*** ./ts/services/masterService.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.masterService = void 0;\nconst Role_1 = __webpack_require__(/*! ../models/Role */ \"./ts/models/Role.ts\");\nclass MasterService {\n    getRoles() {\n        return (JSON.parse(localStorage.getItem(\"RolesData\")) || []).map(role => new Role_1.Role(role));\n    }\n    getStatus(employees) {\n        let status = new Set();\n        employees.forEach(employee => {\n            status.add(employee.status == 1 ? 'Active' : 'InActive');\n        });\n        return [...status];\n    }\n    getLocations(employees) {\n        let locations = new Set();\n        employees.forEach(employee => {\n            locations.add(employee.location);\n        });\n        return [...locations];\n    }\n    getDepartments(employees) {\n        let departments = new Set();\n        employees.forEach(employee => {\n            departments.add(employee.department);\n        });\n        return [...departments];\n    }\n    getRoleLocations() {\n        let locations = new Set();\n        this.getRoles().forEach(role => {\n            locations.add(role.location);\n        });\n        return [...locations];\n    }\n    getRoleDepartments() {\n        let departments = new Set();\n        this.getRoles().forEach(role => {\n            departments.add(role.department);\n        });\n        return [...departments];\n    }\n}\nexports.masterService = new MasterService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90cy9zZXJ2aWNlcy9tYXN0ZXJTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7OztBQUNBLGdGQUFzQztBQUV0QyxNQUFNLGFBQWE7SUFDZixRQUFRO1FBQ0osT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksV0FBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDN0YsQ0FBQztJQUVELFNBQVMsQ0FBQyxTQUFxQjtRQUMzQixJQUFJLE1BQU0sR0FBRyxJQUFJLEdBQUcsRUFBVTtRQUM5QixTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3pCLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO1FBQzVELENBQUMsQ0FBQztRQUNGLE9BQU8sQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxZQUFZLENBQUMsU0FBcUI7UUFDOUIsSUFBSSxTQUFTLEdBQUcsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUNsQyxTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3pCLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3JDLENBQUMsQ0FBQztRQUNGLE9BQU8sQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFRCxjQUFjLENBQUMsU0FBcUI7UUFDaEMsSUFBSSxXQUFXLEdBQUcsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUNwQyxTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3pCLFdBQVcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3pDLENBQUMsQ0FBQztRQUNGLE9BQU8sQ0FBQyxHQUFHLFdBQVcsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxnQkFBZ0I7UUFDWixJQUFJLFNBQVMsR0FBRyxJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDM0IsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakMsQ0FBQyxDQUFDO1FBQ0YsT0FBTyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVELGtCQUFrQjtRQUNkLElBQUksV0FBVyxHQUFHLElBQUksR0FBRyxFQUFVLENBQUM7UUFDcEMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUMzQixXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNyQyxDQUFDLENBQUM7UUFDRixPQUFPLENBQUMsR0FBRyxXQUFXLENBQUMsQ0FBQztJQUM1QixDQUFDO0NBQ0o7QUFFVSxxQkFBYSxHQUFHLElBQUksYUFBYSxFQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXNrLTQvLi90cy9zZXJ2aWNlcy9tYXN0ZXJTZXJ2aWNlLnRzPzBlNjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW1wbG95ZWUgfSBmcm9tIFwiLi4vbW9kZWxzL0VtcGxveWVlc1wiO1xyXG5pbXBvcnQgeyBSb2xlIH0gZnJvbSBcIi4uL21vZGVscy9Sb2xlXCI7XHJcblxyXG5jbGFzcyBNYXN0ZXJTZXJ2aWNlIHtcclxuICAgIGdldFJvbGVzKCk6IFJvbGVbXSB7XHJcbiAgICAgICAgcmV0dXJuIChKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiUm9sZXNEYXRhXCIpKSB8fCBbXSkubWFwKHJvbGUgPT4gbmV3IFJvbGUocm9sZSkpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFN0YXR1cyhlbXBsb3llZXM6IEVtcGxveWVlW10pOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgbGV0IHN0YXR1cyA9IG5ldyBTZXQ8c3RyaW5nPigpXHJcbiAgICAgICAgZW1wbG95ZWVzLmZvckVhY2goZW1wbG95ZWUgPT4ge1xyXG4gICAgICAgICAgICBzdGF0dXMuYWRkKGVtcGxveWVlLnN0YXR1cyA9PSAxID8gJ0FjdGl2ZScgOiAnSW5BY3RpdmUnKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgcmV0dXJuIFsuLi5zdGF0dXNdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldExvY2F0aW9ucyhlbXBsb3llZXM6IEVtcGxveWVlW10pOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgbGV0IGxvY2F0aW9ucyA9IG5ldyBTZXQ8c3RyaW5nPigpO1xyXG4gICAgICAgIGVtcGxveWVlcy5mb3JFYWNoKGVtcGxveWVlID0+IHtcclxuICAgICAgICAgICAgbG9jYXRpb25zLmFkZChlbXBsb3llZS5sb2NhdGlvbik7XHJcbiAgICAgICAgfSlcclxuICAgICAgICByZXR1cm4gWy4uLmxvY2F0aW9uc107XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RGVwYXJ0bWVudHMoZW1wbG95ZWVzOiBFbXBsb3llZVtdKTogc3RyaW5nW10ge1xyXG4gICAgICAgIGxldCBkZXBhcnRtZW50cyA9IG5ldyBTZXQ8c3RyaW5nPigpO1xyXG4gICAgICAgIGVtcGxveWVlcy5mb3JFYWNoKGVtcGxveWVlID0+IHtcclxuICAgICAgICAgICAgZGVwYXJ0bWVudHMuYWRkKGVtcGxveWVlLmRlcGFydG1lbnQpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgcmV0dXJuIFsuLi5kZXBhcnRtZW50c107XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Um9sZUxvY2F0aW9ucygpOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgbGV0IGxvY2F0aW9ucyA9IG5ldyBTZXQ8c3RyaW5nPigpO1xyXG4gICAgICAgIHRoaXMuZ2V0Um9sZXMoKS5mb3JFYWNoKHJvbGUgPT4ge1xyXG4gICAgICAgICAgICBsb2NhdGlvbnMuYWRkKHJvbGUubG9jYXRpb24pO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgcmV0dXJuIFsuLi5sb2NhdGlvbnNdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFJvbGVEZXBhcnRtZW50cygpOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgbGV0IGRlcGFydG1lbnRzID0gbmV3IFNldDxzdHJpbmc+KCk7XHJcbiAgICAgICAgdGhpcy5nZXRSb2xlcygpLmZvckVhY2gocm9sZSA9PiB7XHJcbiAgICAgICAgICAgIGRlcGFydG1lbnRzLmFkZChyb2xlLmRlcGFydG1lbnQpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgcmV0dXJuIFsuLi5kZXBhcnRtZW50c107XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBsZXQgbWFzdGVyU2VydmljZSA9IG5ldyBNYXN0ZXJTZXJ2aWNlKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ts/services/masterService.ts\n");

/***/ }),

/***/ "./ts/services/roleServices.ts":
/*!*************************************!*\
  !*** ./ts/services/roleServices.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.roleServices = void 0;\nconst Role_1 = __webpack_require__(/*! ../models/Role */ \"./ts/models/Role.ts\");\nclass RoleServices {\n    set(data) {\n        localStorage.setItem(\"RolesData\", JSON.stringify(data));\n    }\n    getAll() {\n        return (JSON.parse(localStorage.getItem(\"RolesData\")) || []).map(role => new Role_1.Role(role));\n    }\n    getById(id) {\n        return this.getAll().find((role) => role.id == id);\n    }\n    updateRole(role) {\n        let roles = this.getAll();\n        let index = roles.findIndex(ele => ele.id == role.id);\n        roles[index] = role;\n        this.set(roles);\n    }\n    generateId() {\n        let date = new Date();\n        return `${date.getDay()}${date.getMonth()}${date.getFullYear()}${date.getHours()}${date.getMinutes()}${date.getMilliseconds()}`;\n    }\n    createRole(role) {\n        role.id = this.generateId();\n        this.set([...this.getAll(), role]);\n    }\n    save(role) {\n        if (role.id)\n            this.updateRole(role);\n        else\n            this.createRole(role);\n    }\n}\nexports.roleServices = new RoleServices();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90cy9zZXJ2aWNlcy9yb2xlU2VydmljZXMudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0ZBQXNDO0FBQ3RDLE1BQU0sWUFBWTtJQUVkLEdBQUcsQ0FBQyxJQUFZO1FBQ1osWUFBWSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCxNQUFNO1FBQ0YsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksV0FBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDN0YsQ0FBQztJQUVELE9BQU8sQ0FBQyxFQUFVO1FBQ2QsT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBVSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFRCxVQUFVLENBQUMsSUFBVTtRQUNqQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ3pCLElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN0RCxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDO0lBQ25CLENBQUM7SUFFRCxVQUFVO1FBQ04sSUFBSSxJQUFJLEdBQVMsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUM1QixPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFLEVBQUUsQ0FBQztJQUNwSSxDQUFDO0lBRUQsVUFBVSxDQUFDLElBQVU7UUFDakIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDNUIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFVO1FBQ1gsSUFBSSxJQUFJLENBQUMsRUFBRTtZQUNQLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7O1lBRXRCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUIsQ0FBQztDQUNKO0FBRVUsb0JBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFzay00Ly4vdHMvc2VydmljZXMvcm9sZVNlcnZpY2VzLnRzP2IwNjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm9sZSB9IGZyb20gXCIuLi9tb2RlbHMvUm9sZVwiO1xyXG5jbGFzcyBSb2xlU2VydmljZXMge1xyXG5cclxuICAgIHNldChkYXRhOiBSb2xlW10pOiB2b2lkIHtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcIlJvbGVzRGF0YVwiLCBKU09OLnN0cmluZ2lmeShkYXRhKSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0QWxsKCk6IFJvbGVbXSB7XHJcbiAgICAgICAgcmV0dXJuIChKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiUm9sZXNEYXRhXCIpKSB8fCBbXSkubWFwKHJvbGUgPT4gbmV3IFJvbGUocm9sZSkpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEJ5SWQoaWQ6IHN0cmluZyk6IFJvbGUge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmdldEFsbCgpLmZpbmQoKHJvbGU6IFJvbGUpID0+IHJvbGUuaWQgPT0gaWQpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVJvbGUocm9sZTogUm9sZSkge1xyXG4gICAgICAgIGxldCByb2xlcyA9IHRoaXMuZ2V0QWxsKClcclxuICAgICAgICBsZXQgaW5kZXggPSByb2xlcy5maW5kSW5kZXgoZWxlID0+IGVsZS5pZCA9PSByb2xlLmlkKTtcclxuICAgICAgICByb2xlc1tpbmRleF0gPSByb2xlO1xyXG4gICAgICAgIHRoaXMuc2V0KHJvbGVzKVxyXG4gICAgfVxyXG5cclxuICAgIGdlbmVyYXRlSWQoKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgZGF0ZTogRGF0ZSA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgcmV0dXJuIGAke2RhdGUuZ2V0RGF5KCl9JHtkYXRlLmdldE1vbnRoKCl9JHtkYXRlLmdldEZ1bGxZZWFyKCl9JHtkYXRlLmdldEhvdXJzKCl9JHtkYXRlLmdldE1pbnV0ZXMoKX0ke2RhdGUuZ2V0TWlsbGlzZWNvbmRzKCl9YDtcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGVSb2xlKHJvbGU6IFJvbGUpIHtcclxuICAgICAgICByb2xlLmlkID0gdGhpcy5nZW5lcmF0ZUlkKCk7XHJcbiAgICAgICAgdGhpcy5zZXQoWy4uLnRoaXMuZ2V0QWxsKCksIHJvbGVdKTtcclxuICAgIH1cclxuXHJcbiAgICBzYXZlKHJvbGU6IFJvbGUpIHtcclxuICAgICAgICBpZiAocm9sZS5pZClcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVSb2xlKHJvbGUpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5jcmVhdGVSb2xlKHJvbGUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgbGV0IHJvbGVTZXJ2aWNlcyA9IG5ldyBSb2xlU2VydmljZXMoKTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ts/services/roleServices.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./ts/index.ts");
/******/ 	
/******/ })()
;